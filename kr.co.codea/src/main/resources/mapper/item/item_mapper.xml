<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.codea.item.item_mapper">

<!-- insert -->
<!-- 제품등록 -->
 <!-- 1. ITEM 테이블 INSERT -->
  <insert id="insert_item" parameterType="kr.co.codea.item.itemDTO">
  INSERT INTO ITEM (
      ITEM_ID,ITEM_CODE, ITEM_NAME, ITEM_TYPE,
      ITEM_CAT_L, ITEM_CAT_S, UNIT_CODE,
      SPEC, REMARK, LEAD_TIME, BP_CODE, PRICE
    ) VALUES (
      "ERP"."ISEQ$$_74178".nextval,#{itemCode}, #{itemName}, #{itemType},
      #{itemCatL}, #{itemCatS}, #{unitCode},
      #{spec}, #{reMark}, #{leadTime}, #{bpCode}, #{price}
    )
</insert>

<!-- 제품목록 , 검색 조회  
 resultType="kr.co.codea.item.item_list_DTO"
   cc.CODE AS UNIT_NAME => 단위 EA 조회하기 
-->
<select id="item_select"  parameterType="String"  resultMap="itemListResultMap">   
SELECT 
  A.ITEM_ID,
  A.ITEM_CODE,
  A.ITEM_TYPE,
  A.ITEM_NAME,
  A.ITEM_CAT_L,
  A.ITEM_CAT_S,
  A.SPEC,
  A.UNIT_CODE,
  CC.CODE AS UNIT_CODE_VALUE, 
  A.PRICE,
  A.BP_CODE,
  P.BP_NAME,
  P.TEL,  
  A.REMARK
FROM ITEM A
LEFT JOIN BUSINESS_PARTNER P 
  ON A.BP_CODE = P.BP_CODE
LEFT JOIN COMMON_CODE CC 
  ON A.UNIT_CODE = CC.CODE_ID 
  AND CC.CODE_TYPE = 'UNIT_CODE'
  AND P.BP_TYPE = '고객사' 
  <where>
    <if test="itemType != null and itemType != ''">
      A.ITEM_TYPE = #{itemType}
    </if>
    <if test="keyword != null and keyword != ''">
      AND (
        A.ITEM_NAME LIKE CONCAT('%', #{keyword}, '%')
        OR A.ITEM_CODE LIKE CONCAT('%', #{keyword}, '%')
      )
    </if>
  </where>
</select>
    
<!-- 제품 상세 정보 -->
<select id="item_detail" parameterType="int" resultType="kr.co.codea.item.itemDTO">
SELECT 
  A.ITEM_ID,
  A.ITEM_CODE,
  A.ITEM_TYPE,
  A.ITEM_NAME,
  A.ITEM_CAT_L,
  A.ITEM_CAT_S,
  A.SPEC,
  A.UNIT_CODE,
  CC.CODE AS UNIT_CODE_VALUE, 
  A.PRICE,
  A.BP_CODE,
  P.BP_NAME,
  P.TEL,                     
  A.REMARK
FROM ITEM A
LEFT JOIN BUSINESS_PARTNER P 
  ON A.BP_CODE = P.BP_CODE
LEFT JOIN COMMON_CODE CC 
  ON A.UNIT_CODE = CC.CODE_ID 
  AND CC.CODE_TYPE = 'UNIT_CODE'
WHERE A.ITEM_TYPE = '완제품'        
  AND P.BP_TYPE = '고객사'   
</select>

<!-- 거래처 조회(비즈니스 파트너)-->
<select id="bp_select"  parameterType="String"  resultMap="itemListResultMap">
  SELECT 
    BP_NAME, 
    BP_CODE,
    TEL
  FROM BUSINESS_PARTNER
  WHERE BP_TYPE = '고객사'
</select>

<!-- 대분류 소분류 칼럼(ITEM-CATEGORY)  -->
<select id="item_cg_select"  parameterType="String"  resultMap="itemListResultMap">
SELECT 
  i.ITEM_CODE,
  i.ITEM_NAME,
  catL.CATEGORY_NAME AS ITEM_CAT_L_NAME,
  catS.CATEGORY_NAME AS ITEM_CAT_S_NAME
FROM ITEM i
LEFT JOIN ITEM_CATEGORY catL ON i.ITEM_CAT_L = catL.CATEGORY_ID
LEFT JOIN ITEM_CATEGORY catS ON .ITEM_CAT_S = catS.CATEGORY_ID
</select>

<!-- 대분류만 뽑기 -->
<select id="selectCatL" resultType="itemDTO">
  SELECT CATEGORY_ID, CATEGORY_NAME
  FROM ITEM_CATEGORY
  WHERE CATEGORY_LEVEL = 1
</select>

<!-- 소분류만 뽑기 -->
<select id="selectCatS" resultType="itemDTO">
  SELECT CATEGORY_ID, CATEGORY_NAME, PARENT_ID
  FROM ITEM_CATEGORY
  WHERE CATEGORY_LEVEL = 2
</select>

<!-- 단위뽑기
  c.CODE_DESC AS UNIT_NAME =>별명 잡음(단위이름)
 -->
<select  id="unitcode_list" resultType="itemDTO">
  SELECT CODE_ID, CODE
  FROM COMMON_CODE
  WHERE CODE_TYPE = 'UNIT_CODE'
</select>


<!-- 거래처 수정, 삭제 -->
<update id="update_item" parameterType="kr.co.codea.item.itemDTO">
  UPDATE ITEM
  SET
    ITEM_NAME = #{itemName},
    ITEM_TYPE = #{itemType},
    ITEM_CAT_L = #{itemCatL},
    ITEM_CAT_S = #{itemCatS},
    SPEC = #{spec},
    UNIT_CODE = #{unitCode},
    PRICE = #{price},
    BP_CODE = #{bpCode},
    REMARK = #{reMark}
  WHERE ITEM_CODE = #{itemCode}
</update>

<!-- 제품 등록삭제 -->
  <delete id="delete_item" parameterType="String">
    DELETE FROM ITEM
    WHERE ITEM_CODE = #{itemId}
  </delete>


<!-- 제품을 수정하기 위해 불러오는항목-->
<!--상세정보, 수정 같이 사용  -->
<select id="select_item_by_id" parameterType="String" resultType="kr.co.codea.item.itemDTO">
  SELECT
    I.ITEM_ID, 
    I.ITEM_CODE, 
    I.ITEM_NAME,
    I.ITEM_TYPE,
    I.ITEM_CAT_L,
    I.ITEM_CAT_S,
    I.SPEC,
    C.CODE AS unitCodeText,  
    I.PRICE,
    I.REMARK,
    I.BP_CODE AS bpCode,              
    BP.BP_NAME AS BP_NAME,    
    BP.TEL AS Tel          
  FROM ITEM I
  LEFT JOIN COMMON_CODE C
    ON I.UNIT_CODE = C.CODE_ID
   AND C.CODE_TYPE = 'UNIT_CODE'
  LEFT JOIN BUSINESS_PARTNER BP
    ON I.BP_CODE = BP.BP_CODE
   AND BP.BP_TYPE = '고객사'
  WHERE I.ITEM_ID = #{itemId}
</select>

<!-- 거래처 상세정보

<select id="select_item_by_bp" parameterType="String" resultType="kr.co.codea.item.itemDTO">
   SELECT
      I.ITEM_ID,
      I.ITEM_CODE,
      I.ITEM_NAME,
      I.ITEM_TYPE,
      I.ITEM_CAT_L,
      I.ITEM_CAT_S,
      I.SPEC,
      I.PRICE,
      I.REMARK,
      I.BP_CODE,
      BP.BP_NAME,
      BP.TEL 
    FROM ITEM I
    LEFT JOIN BUSINESS_PARTNER BP
      ON I.BP_CODE  = BP.BP_CODE
     AND BP.BP_TYPE = '고객사'
    WHERE I.BP_CODE = #{bpCode}
</select>

 -->


<!-- 페이징 관련 mapper -->

<!--
  SELECT
      ITEM_ID,
      ITEM_CODE,
      ITEM_NAME,
      SPEC,
      UNIT_CODE,
      PRICE,
      REMARK,
      ITEM_TYPE,
      CREATED_AT
    FROM ITEM

  -->

 <!-- 검색 + OFFSET … FETCH 페이징 -->
  <select id="select_item_page" parameterType="map" resultType="kr.co.codea.item.itemDTO">
  SELECT
    I.ITEM_ID,
    I.ITEM_CODE,
    I.ITEM_TYPE,
    I.ITEM_NAME,
    I.ITEM_CAT_L,
    I.ITEM_CAT_S,
    I.SPEC,
    C.CODE AS unitcodeText,
    I.PRICE,
    I.REMARK
  FROM ITEM I
  LEFT JOIN COMMON_CODE C
    ON I.UNIT_CODE = C.CODE_ID
    AND C.CODE_TYPE = 'UNIT_CODE'
  <where>
    <!-- 검색어(keyword)가 넘어왔을 때 조건 -->
    <if test="keyword != null and keyword != ''">
      <!-- ITEM_NAME 또는 ITEM_CODE에 keyword 포함 탐색 -->
      AND (
           I.ITEM_NAME LIKE '%' || #{keyword} || '%'
           OR I.ITEM_CODE LIKE '%' || #{keyword} || '%'
          )
    </if>
    <!-- itemType(완제품/원자재) 조건이 넘어왔을 때 -->
    <if test="itemType != null and itemType != ''">
      AND I.ITEM_TYPE = #{itemType}
    </if>
  </where>
  <!-- 한 번만 ORDER BY 절을 쓰고, DESC 정렬 후 페이징 처리 -->
  ORDER BY I.ITEM_ID DESC
  OFFSET #{offset} ROWS
  FETCH NEXT #{pageSize} ROWS ONLY
  </select>

  <!-- 검색 조건에 맞는 전체 건수 조회 (페이징 UI에 필요) -->
  <select id="page_count" parameterType="map" resultType="int">
    SELECT COUNT(*)
    FROM ITEM
    <where>
      <if test="keyword != null and keyword != ''">
        AND (ITEM_NAME LIKE '%' || #{keyword} || '%'
             OR ITEM_CODE LIKE '%' || #{keyword} || '%')
      </if>
      <if test="itemType != null and itemType != ''">
        AND ITEM_TYPE = #{itemType}
      </if>
    </where>
  </select>

<!-- resultMap -->
<resultMap id="itemListResultMap" type="kr.co.codea.item.itemDTO">
    <result property="itemCode" column="ITEM_CODE"/>
    <result property="itemName" column="ITEM_NAME"/>
    <result property="itemCatL" column="ITEM_CAT_L"/>
    <result property="itemCatS" column="ITEM_CAT_S"/>
    <result property="spec" column="SPEC"/>
    <result property="reMark" column="REMARK"/>
    <result property="price" column="PRICE"/>
    <result property="unitCode" column="UNIT_CODE"/>
    <result property="Code" column="CODE"/>
    
    <result property="bpCode" column="BP_CODE"/>
    <result property="bpName" column="BP_NAME"/>
    <result property="Tel" column="TEL"/>
    
    <result property="itemCatLName" column="ITEM_CAT_L_NAME"/>
    <result property="itemCatSName" column="ITEM_CAT_S_NAME"/>
    
    <result property="categoryId" column="CATEGORY_ID"/>
     
    <result property="codeId" column="CODE_ID"/>
    <result property="codeDesc" column="CODE_DESC"/>
    
     <result property="unitcodeText" column="UNIT_CODE_TEXT"/>

   
    <result property="itemId" column="ITEM_ID"/>
    <result property="itemType" column="ITEM_TYPE"/>
    <result property="leadTime" column="LEAD_TIME"/>
    <result property="createdAt" column="CREATED_AT"/>
    <result property="unitName" column="UNIT_NAME"/>
    <result property="unitcodeValue" column="UNIT_CODE_VALUE"/>
</resultMap>
</mapper>