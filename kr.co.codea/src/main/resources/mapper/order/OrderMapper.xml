<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.codea.order.OrderMapper">

    <select id="selectOrderList" resultType="kr.co.codea.order.OrderDto$OrderDetailView">
        SELECT
            oh.ORD_ID AS ordId,
            od.ORD_DETAIL_ID AS ordDetailId,
            i.ITEM_ID AS itemId,
            oh.ORD_CODE AS ordCode,
            oh.ORDER_DATE AS orderDate,
            oh.REMARK AS remark,
            od.REMARK AS orderDetailRemark,
            oh.STATUS AS status,
            od.STATUS AS detailStatus,
            bp.BP_NAME AS bpName,
            i.ITEM_NAME AS productName,
            od.ORDER_QTY AS orderQty,
            inv.CURRENT_QTY AS stockQty,
            inv.WH_ID AS whId,
            od.REQUIRED_DELIVERY_DATE AS requiredDate
        FROM ORD_HEADER oh
        JOIN BUSINESS_PARTNER bp ON oh.BP_ID = bp.BP_ID
        JOIN ORD_DETAIL od ON oh.ORD_ID = od.ORD_ID
        JOIN ITEM i ON od.ITEM_ID = i.ITEM_ID
        LEFT JOIN INVENTORY inv ON od.ITEM_ID = inv.ITEM_ID
        WHERE 1 = 1
        <if test="keyword != null and keyword != ''">
            AND (bp.BP_NAME LIKE '%' || #{keyword} || '%' OR i.ITEM_NAME LIKE '%' || #{keyword} || '%')
        </if>
        <if test="status != null and status != ''">
            AND oh.STATUS = #{status}
        </if>
        <if test="startDate != null and startDate != ''">
            AND oh.ORDER_DATE &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
        </if>
        <if test="endDate != null and endDate != ''">
            AND oh.ORDER_DATE &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
        </if>
        ORDER BY oh.ORDER_DATE DESC, oh.ORD_ID, od.ORD_DETAIL_ID
        OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS ONLY
    </select>

    <select id="orderCount" resultType="int">
        SELECT COUNT(DISTINCT oh.ORD_ID)
        FROM ORD_HEADER oh
        JOIN BUSINESS_PARTNER bp ON oh.BP_ID = bp.BP_ID
        <if test="keyword != null and keyword != ''">
            JOIN ORD_DETAIL od ON oh.ORD_ID = od.ORD_ID
            JOIN ITEM i ON od.ITEM_ID = i.ITEM_ID
        </if>
        WHERE 1 = 1
        <if test="keyword != null and keyword != ''">
            AND (bp.BP_NAME LIKE '%' || #{keyword} || '%' OR i.ITEM_NAME LIKE '%' || #{keyword} || '%')
        </if>
        <if test="status != null and status != ''">
            AND oh.STATUS = #{status}
        </if>
        <if test="startDate != null and startDate != ''">
            AND oh.ORDER_DATE &gt;= TO_DATE(#{startDate}, 'YYYY-MM-DD')
        </if>
        <if test="endDate != null and endDate != ''">
            AND oh.ORDER_DATE &lt;= TO_DATE(#{endDate}, 'YYYY-MM-DD')
        </if>
    </select>

    <insert id="insertProvisionalShipmentToInOut" parameterType="kr.co.codea.order.OrderDto$ProvisionalShipmentRequest">
        INSERT INTO INOUT (
            INOUT_TYPE,
            ITEM_ID,
            QUANTITY,
            ITEM_UNIT_COST,
            SOURCE_DOC_TYPE,
            SOURCE_DOC_HEADER_ID,
            SOURCE_DOC_DETAIL_ID,
            WH_ID,
            EMP_ID,
            REMARK
        ) VALUES (
            24,
            #{itemId},
            #{quantity},
            #{itemUnitCost, jdbcType=NUMERIC},
            42,
            #{ordId},
            #{orderDetailId},
            #{whId},
            #{empId, jdbcType=NUMERIC},
            #{remark, jdbcType=VARCHAR}
        )
    </insert>

    <update id="updateOrderHeaderStatus" parameterType="long">
        UPDATE ORD_HEADER
        SET STATUS = '완료',
            UPDATED_AT = SYSDATE
        WHERE ORD_ID = #{ordId}
    </update>

    <update id="updateOrderDetailStatus" parameterType="long">
        UPDATE ORD_DETAIL
        SET STATUS = '완료'
        WHERE ORD_DETAIL_ID = #{ordDetailId}
    </update>

    <select id="countPendingDetail" resultType="int" parameterType="long">
        SELECT COUNT(*)
        FROM ORD_DETAIL
        WHERE ORD_ID = #{ordId}
        AND STATUS != '완료'
    </select>

    <select id="selectItemPrice" resultType="java.math.BigDecimal" parameterType="long">
        SELECT PRICE
        FROM ITEM
        WHERE ITEM_ID = #{itemId}
    </select>

    <select id="selectRealInventoryQty" parameterType="int" resultType="int">
    SELECT
        NVL(i.CURRENT_QTY, 0)
        + NVL((SELECT SUM(io.QUANTITY)
               FROM INOUT io
               WHERE io.ITEM_ID = #{itemId}
                 AND io.INOUT_TYPE = 21), 0)  <!-- 가입고 -->
        - NVL((SELECT SUM(io.QUANTITY)
               FROM INOUT io
               WHERE io.ITEM_ID = #{itemId}
                 AND io.INOUT_TYPE = 24), 0)  <!-- 가출고 -->
    AS REAL_QTY
    FROM INVENTORY i
    WHERE i.ITEM_ID = #{itemId}
</select>

</mapper>
